import IEntityMetricsAdapter, { EntityMetricsLoadType, EntityMetricsMutationType } from './IEntityMetricsAdapter';
export declare const timeAndLogLoadEventAsync: (metricsAdapter: IEntityMetricsAdapter, loadType: EntityMetricsLoadType, entityClassName: string) => <TFields>(promise: Promise<readonly Readonly<TFields>[]>) => Promise<readonly Readonly<TFields>[]>;
export declare const timeAndLogLoadMapEventAsync: (metricsAdapter: IEntityMetricsAdapter, loadType: EntityMetricsLoadType, entityClassName: string) => <TFields, N extends keyof TFields>(promise: Promise<ReadonlyMap<NonNullable<TFields[N]>, readonly Readonly<TFields>[]>>) => Promise<ReadonlyMap<NonNullable<TFields[N]>, readonly Readonly<TFields>[]>>;
export declare const timeAndLogMutationEventAsync: (metricsAdapter: IEntityMetricsAdapter, mutationType: EntityMetricsMutationType, entityClassName: string) => <T>(promise: Promise<T>) => Promise<T>;
