import Entity from '../Entity';
import { EntityCompanionDefinition } from '../EntityCompanionProvider';
import EntityConfiguration from '../EntityConfiguration';
import EntityPrivacyPolicy from '../EntityPrivacyPolicy';
import ViewerContext from '../ViewerContext';
import AlwaysAllowPrivacyPolicyRule from '../rules/AlwaysAllowPrivacyPolicyRule';
export type SimpleTestFields = {
    id: string;
};
export type SimpleTestFieldSelection = keyof SimpleTestFields;
export declare const simpleTestEntityConfiguration: EntityConfiguration<SimpleTestFields>;
export declare class SimpleTestEntityPrivacyPolicy extends EntityPrivacyPolicy<SimpleTestFields, string, ViewerContext, SimpleTestEntity, SimpleTestFieldSelection> {
    protected readonly readRules: AlwaysAllowPrivacyPolicyRule<SimpleTestFields, string, ViewerContext, SimpleTestEntity, "id">[];
    protected readonly createRules: AlwaysAllowPrivacyPolicyRule<SimpleTestFields, string, ViewerContext, SimpleTestEntity, "id">[];
    protected readonly updateRules: AlwaysAllowPrivacyPolicyRule<SimpleTestFields, string, ViewerContext, SimpleTestEntity, "id">[];
    protected readonly deleteRules: AlwaysAllowPrivacyPolicyRule<SimpleTestFields, string, ViewerContext, SimpleTestEntity, "id">[];
}
export default class SimpleTestEntity extends Entity<SimpleTestFields, string, ViewerContext, SimpleTestFieldSelection> {
    static defineCompanionDefinition(): EntityCompanionDefinition<SimpleTestFields, string, ViewerContext, SimpleTestEntity, SimpleTestEntityPrivacyPolicy, SimpleTestFieldSelection>;
}
