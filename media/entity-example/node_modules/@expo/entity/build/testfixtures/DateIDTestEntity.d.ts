import Entity from '../Entity';
import { EntityCompanionDefinition } from '../EntityCompanionProvider';
import EntityConfiguration from '../EntityConfiguration';
import EntityPrivacyPolicy from '../EntityPrivacyPolicy';
import ViewerContext from '../ViewerContext';
import AlwaysAllowPrivacyPolicyRule from '../rules/AlwaysAllowPrivacyPolicyRule';
export type DateIDTestFields = {
    id: Date;
};
export declare const dateIDTestEntityConfiguration: EntityConfiguration<DateIDTestFields>;
export declare class DateIDTestEntityPrivacyPolicy extends EntityPrivacyPolicy<DateIDTestFields, Date, ViewerContext, DateIDTestEntity> {
    protected readonly readRules: AlwaysAllowPrivacyPolicyRule<DateIDTestFields, Date, ViewerContext, DateIDTestEntity, "id">[];
    protected readonly createRules: AlwaysAllowPrivacyPolicyRule<DateIDTestFields, Date, ViewerContext, DateIDTestEntity, "id">[];
    protected readonly updateRules: AlwaysAllowPrivacyPolicyRule<DateIDTestFields, Date, ViewerContext, DateIDTestEntity, "id">[];
    protected readonly deleteRules: AlwaysAllowPrivacyPolicyRule<DateIDTestFields, Date, ViewerContext, DateIDTestEntity, "id">[];
}
export default class DateIDTestEntity extends Entity<DateIDTestFields, Date, ViewerContext> {
    static defineCompanionDefinition(): EntityCompanionDefinition<DateIDTestFields, Date, ViewerContext, DateIDTestEntity, DateIDTestEntityPrivacyPolicy>;
}
