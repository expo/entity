"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const EntityDataManager_1 = __importDefault(require("./EntityDataManager"));
const ReadThroughEntityCache_1 = __importDefault(require("./ReadThroughEntityCache"));
/**
 * Responsible for orchestrating fetching and caching of entity data from a
 * table. Note that one instance is shared amongst all entities that read from
 * the table to ensure cross-entity data consistency.
 */
class EntityTableDataCoordinator {
    entityConfiguration;
    queryContextProvider;
    databaseAdapter;
    cacheAdapter;
    dataManager;
    constructor(entityConfiguration, databaseAdapterProvider, cacheAdapterProvider, queryContextProvider, metricsAdapter, entityClassName) {
        this.entityConfiguration = entityConfiguration;
        this.queryContextProvider = queryContextProvider;
        this.databaseAdapter = databaseAdapterProvider.getDatabaseAdapter(entityConfiguration);
        this.cacheAdapter = cacheAdapterProvider.getCacheAdapter(entityConfiguration);
        this.dataManager = new EntityDataManager_1.default(this.databaseAdapter, new ReadThroughEntityCache_1.default(entityConfiguration, this.cacheAdapter), queryContextProvider, metricsAdapter, entityClassName);
    }
    getQueryContextProvider() {
        return this.queryContextProvider;
    }
}
exports.default = EntityTableDataCoordinator;
//# sourceMappingURL=EntityTableDataCoordinator.js.map