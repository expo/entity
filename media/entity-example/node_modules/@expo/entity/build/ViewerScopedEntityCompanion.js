"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ViewerScopedEntityLoaderFactory_1 = __importDefault(require("./ViewerScopedEntityLoaderFactory"));
const ViewerScopedEntityMutatorFactory_1 = __importDefault(require("./ViewerScopedEntityMutatorFactory"));
/**
 * Provides a simpler API for loading and mutating entities by injecting the ViewerContext
 * from the viewer-scoped entity companion provider.
 */
class ViewerScopedEntityCompanion {
    entityCompanion;
    viewerContext;
    constructor(entityCompanion, viewerContext) {
        this.entityCompanion = entityCompanion;
        this.viewerContext = viewerContext;
    }
    /**
     * Vend a viewer-scoped entity loader.
     */
    getLoaderFactory() {
        return new ViewerScopedEntityLoaderFactory_1.default(this.entityCompanion.getLoaderFactory(), this.viewerContext);
    }
    /**
     * Vend a viewer-scoped entity mutator factory.
     */
    getMutatorFactory() {
        return new ViewerScopedEntityMutatorFactory_1.default(this.entityCompanion.getMutatorFactory(), this.viewerContext);
    }
    /**
     * Get the query context provider for this entity.
     */
    getQueryContextProvider() {
        return this.entityCompanion.getQueryContextProvider();
    }
    /**
     * Get the IEntityMetricsAdapter for this companion.
     */
    getMetricsAdapter() {
        return this.entityCompanion.getMetricsAdapter();
    }
}
exports.default = ViewerScopedEntityCompanion;
//# sourceMappingURL=ViewerScopedEntityCompanion.js.map