import { EntityFieldDefinition } from './EntityFieldDefinition';
/**
 * EntityFieldDefinition for a column with a JS string type.
 */
export declare class StringField extends EntityFieldDefinition<string> {
    protected validateInputValueInternal(value: string): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS string type.
 * Enforces that the string is a valid UUID.
 */
export declare class UUIDField extends StringField {
    protected validateInputValueInternal(value: string): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS Date type.
 */
export declare class DateField extends EntityFieldDefinition<Date> {
    protected validateInputValueInternal(value: Date): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS boolean type.
 */
export declare class BooleanField extends EntityFieldDefinition<boolean> {
    protected validateInputValueInternal(value: boolean): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS number type.
 * Enforces that the number is an integer.
 */
export declare class IntField extends EntityFieldDefinition<number> {
    protected validateInputValueInternal(value: number): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS number type.
 * Enforces that the number is a float (which includes integers in JS).
 */
export declare class FloatField extends EntityFieldDefinition<number> {
    protected validateInputValueInternal(value: number): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS string array type.
 * Enforces that every member of the string array is a string.
 */
export declare class StringArrayField extends EntityFieldDefinition<string[]> {
    protected validateInputValueInternal(value: string[]): boolean;
}
/**
 * EntityFieldDefinition for a column with a JS JSON object type.
 */
export declare class JSONObjectField extends EntityFieldDefinition<object> {
    protected validateInputValueInternal(value: object): boolean;
}
/**
 * EntityFieldDefinition for a enum column with a JS string or number type.
 */
export declare class EnumField extends EntityFieldDefinition<string | number> {
    protected validateInputValueInternal(value: string | number): boolean;
}
/**
 * EntityFieldDefinition for a enum column with a strict typescript enum type.
 */
export declare class StrictEnumField<T extends object> extends EnumField {
    private readonly enum;
    constructor(options: ConstructorParameters<typeof EnumField>[0] & {
        enum: T;
    });
    protected validateInputValueInternal(value: string | number): boolean;
}
