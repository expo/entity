"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ts_mockito_1 = require("ts-mockito");
const EntityQueryContext_1 = require("../../../EntityQueryContext");
const ViewerContext_1 = __importDefault(require("../../../ViewerContext"));
const AlwaysAllowPrivacyPolicyRule_1 = __importDefault(require("../../../rules/AlwaysAllowPrivacyPolicyRule"));
const AlwaysDenyPrivacyPolicyRule_1 = __importDefault(require("../../../rules/AlwaysDenyPrivacyPolicyRule"));
const PrivacyPolicyRuleTestUtils_1 = require("../PrivacyPolicyRuleTestUtils");
describe(PrivacyPolicyRuleTestUtils_1.describePrivacyPolicyRuleWithAsyncTestCase, () => {
    describe('default args do not execute', () => {
        (0, PrivacyPolicyRuleTestUtils_1.describePrivacyPolicyRuleWithAsyncTestCase)(new AlwaysAllowPrivacyPolicyRule_1.default(), {
            allowCases: new Map([
                [
                    'case',
                    async () => ({
                        viewerContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)(ViewerContext_1.default)),
                        queryContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)(EntityQueryContext_1.EntityQueryContext)),
                        evaluationContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)()),
                        entity: (0, ts_mockito_1.anything)(),
                    }),
                ],
            ]),
        });
        (0, PrivacyPolicyRuleTestUtils_1.describePrivacyPolicyRuleWithAsyncTestCase)(new AlwaysDenyPrivacyPolicyRule_1.default(), {
            denyCases: new Map([
                [
                    'case',
                    async () => ({
                        viewerContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)(ViewerContext_1.default)),
                        queryContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)(EntityQueryContext_1.EntityQueryContext)),
                        evaluationContext: (0, ts_mockito_1.instance)((0, ts_mockito_1.mock)()),
                        entity: (0, ts_mockito_1.anything)(),
                    }),
                ],
            ]),
        });
    });
});
//# sourceMappingURL=PrivacyPolicyRuleTestUtils-test.js.map