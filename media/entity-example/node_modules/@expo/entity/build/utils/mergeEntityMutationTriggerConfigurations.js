"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeEntityMutationTriggerConfigurations = mergeEntityMutationTriggerConfigurations;
function nonNullish(value) {
    return value !== null && value !== undefined;
}
function mergeEntityMutationTriggerConfigurations(...mutationTriggerConfigurations) {
    const merged = {
        beforeCreate: mutationTriggerConfigurations.flatMap((c) => c.beforeCreate).filter(nonNullish),
        afterCreate: mutationTriggerConfigurations.flatMap((c) => c.afterCreate).filter(nonNullish),
        beforeUpdate: mutationTriggerConfigurations.flatMap((c) => c.beforeUpdate).filter(nonNullish),
        afterUpdate: mutationTriggerConfigurations.flatMap((c) => c.afterUpdate).filter(nonNullish),
        beforeDelete: mutationTriggerConfigurations.flatMap((c) => c.beforeDelete).filter(nonNullish),
        afterDelete: mutationTriggerConfigurations.flatMap((c) => c.afterDelete).filter(nonNullish),
        beforeAll: mutationTriggerConfigurations.flatMap((c) => c.beforeAll).filter(nonNullish),
        afterAll: mutationTriggerConfigurations.flatMap((c) => c.afterAll).filter(nonNullish),
        afterCommit: mutationTriggerConfigurations.flatMap((c) => c.afterCommit).filter(nonNullish),
    };
    /** Remove any trigger that is an empty array */
    for (const key of Object.keys(merged)) {
        if (merged[key].length === 0) {
            delete merged[key];
        }
    }
    return merged;
}
//# sourceMappingURL=mergeEntityMutationTriggerConfigurations.js.map