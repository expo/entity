import EntityError, { EntityErrorCode, EntityErrorState } from './EntityError';
import { EntityAuthorizationAction } from '../EntityPrivacyPolicy';
import ReadonlyEntity from '../ReadonlyEntity';
import ViewerContext from '../ViewerContext';
export default class EntityNotAuthorizedError<TFields extends object, TID extends NonNullable<TFields[TSelectedFields]>, TViewerContext extends ViewerContext, TEntity extends ReadonlyEntity<TFields, TID, TViewerContext, TSelectedFields>, TSelectedFields extends keyof TFields = keyof TFields> extends EntityError {
    readonly state = EntityErrorState.PERMANENT;
    readonly code = EntityErrorCode.ERR_ENTITY_NOT_AUTHORIZED;
    readonly entityClassName: string;
    constructor(entity: TEntity, viewerContext: TViewerContext, action: EntityAuthorizationAction, ruleIndex: number);
}
